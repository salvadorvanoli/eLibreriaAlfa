spring.application.name=eLibreriaAlfa

server.port=8080
server.servlet.context-path=/elibreriaalfa

spring.datasource.url=jdbc:postgresql://localhost:5432/libreriaalfa
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASS}
spring.datasource.driver-class-name=org.postgresql.Driver

# Configuracion de la base de datos (cambiar a 'update' si es necesario mantener los datos)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.default_schema=public
spring.jpa.show-sql=true
# Desactiva TODA la seguridad (solo para desarrollo)
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration

# Configuracion del servidor SMTP
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${EMAIL_USER}
spring.mail.password=${EMAIL_PASS}
spring.mail.protocol=smtp
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

# Carpeta base para las imagenes
app.images.base-path=uploads

# Configuracion de recursos estaticos (evitar conflictos con /image/**)
spring.web.resources.static-locations=classpath:/static/
spring.mvc.static-path-pattern=/static/**

# Configuracion de CORS adicional
spring.mvc.cors.allowed-origins=http://localhost:4200,http://127.0.0.1:4200
spring.mvc.cors.allowed-methods=GET,POST,PUT,PATCH,DELETE,OPTIONS,HEAD
spring.mvc.cors.allowed-headers=*
spring.mvc.cors.allow-credentials=true
spring.mvc.cors.max-age=3600

# Configuracion de cache para imagenes
spring.web.resources.cache.cachecontrol.max-age=86400
spring.web.resources.cache.cachecontrol.cache-public=true

# Activar la inicializacion de datos (debe estar en false si se mantienen datos)
data.init.enabled=false